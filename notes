instalar react pelo vite na pasta anterior com o comando:
> npm create vite@latest
seleciona o nome do projeto e seleciona react com type script

entra no diretório e executar o comando no terminal:
>npm install

instalar as dependências do projeto com o npm:
>npm i tailwindcss postcss autoprefixer -D

inicializar o arquivo do postcss:
>npx tailwindcss init -p

configurar o tailswind.config.js, substituir o content
content: [
'./src/**/*.tsx'
],

instalar extensões no vscode:
GraphQl
Tailwind CSS IntelliSense
PostCSS Language Support

criar conta graphcms
httpa://graphcms.com

*clonar dados graphcms
https://rseat.in/lab-graphcms

notas graphcms
query = buscar dados
mutation = criar, alterar ou deletar dados

instalar apollo eo graph Ql ( controle de requisição )
>npm i @apollo/client graphql

para usar useQuery do apollo colocar o componente App do arquivo main.tsx dentro do componenete 
<ApolloProvider client={client}>
    <App />
</ApolloProvider>
client importado da lib apollo

svg converter para o jsx
https://svg2jsx.com/

customização de cores tailwindcss
https://tailwindcss.com/docs/customizing-colors
editar o tailwind.config.js e adicionar as cores que serão usadas

biblioteca de icones com suporte em react
https://phosphoricons.com/
>npm i phosphor-react

biblioteca para lidar com datas
https://date-fns.org/v2.28.0/docs/format
>npm i date-fns
funçao format do date-fns usar aspas dupla no segundo parametro e aspas simples para caracteres

instalar package vimejs
>npm i @vime/core @vime/react --force
*--force por nao ter suporte a versão do react 
@vime/react --force *causa comfilto na instalaçao dos pacotes*

****Desafio responsivo

biblioteca para roteamento react
>npm i react-router-dom

***Desafio video na rota /lessons __ok

nas configuraçoes do graphcms precisa liberar as mutations para serem feitas pelo app
Nas configurações entrar em API ACESS criar e criar um token
Desabilitar as criações de tabelas em management permissions
e adicionar as permissões que poderão ser modificadas

useMutation retorna um array na primeira posiçao uma funçao para ser usada posteriormente e na segunda posiçao um objeto com os dados de retorno

liberar no graphcms a leitura do draft da tabela subscriber para corrigir o erro

>npm i classnames